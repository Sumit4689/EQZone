<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - EQZone</title>
    <link rel="stylesheet" href="/admin.css">
    <script src="https://unpkg.com/lucide@latest"></script>
</head>

<body>
    <div class="container">
        <nav class="vertical-navbar">
            <div class="nav-header">
                <h2 class="nav-title">EQZone</h2>
                <button class="menu-toggle" aria-label="Toggle menu">
                    <span></span>
                    <span></span>
                    <span></span>
                </button>
            </div>
            <div class="nav-content">
                <ul class="nav-links">
                    <li><a href="/EQZone" class="nav-link"><svg xmlns="http://www.w3.org/2000/svg" width="20"
                                height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-home mr-2">
                                <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                                <polyline points="9 22 9 12 15 12 15 22"></polyline>
                            </svg>Home</a></li>
                    <li><a href="/Admin/dashboard" class="nav-link"><svg xmlns="http://www.w3.org/2000/svg"
                                width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor"
                                stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                class="lucide lucide-user mr-2">
                                <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"></path>
                                <circle cx="12" cy="7" r="4"></circle>
                            </svg>All Users</a></li>
                    <li><a href="/Admin/AllPresets" class="nav-link"><svg xmlns="http://www.w3.org/2000/svg" width="20"
                                height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-file-text mr-2">
                                <path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"></path>
                                <path d="M14 2v4a2 2 0 0 0 2 2h4"></path>
                                <path d="M10 9H8"></path>
                                <path d="M16 13H8"></path>
                                <path d="M16 17H8"></path>
                            </svg>All Presets</a></li>
                    <li><a href="/Admin/uploadFile" class="nav-link"><svg xmlns="http://www.w3.org/2000/svg" width="20"
                                height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-upload mr-2">
                                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                                <polyline points="17 8 12 3 7 8"></polyline>
                                <line x1="12" x2="12" y1="3" y2="15"></line>
                            </svg>Upload File</a></li>
                    <li><button class="nav-link logout-btn"><svg xmlns="http://www.w3.org/2000/svg" width="20"
                                height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-log-out mr-2">
                                <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                                <polyline points="16 17 21 12 16 7"></polyline>
                                <line x1="21" x2="9" y1="12" y2="12"></line>
                            </svg>Logout</button></li>
                </ul>
            </div>
        </nav>
        <main class="main-content">
            <div class="admin-panel">
                <h2>User Management</h2>
                <div class="table-container">
                    <table class="admin-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Username</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% users.forEach(user => { %>
                                <tr data-user-id="<%= user._id %>">
                                    <td><%= user.name %></td>
                                    <td><%= user.email %></td>
                                    <td><%= user.username %></td>
                                    <td>
                                        <button class="delete-btn" onclick="deleteUser('<%= user._id %>')">
                                            <i data-lucide="trash-2"></i> Delete
                                        </button>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>

    <script>
        async function deleteUser(userId) {
            if (confirm('Are you sure you want to delete this user?')) {
                console.log(userId)
                try {
                    const response = await fetch(`/Admin/user/${userId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    const data = await response.json();
                    
                    if (response.ok) {
                        // Remove the row from the table
                        const row = document.querySelector(`tr[data-user-id="${userId}"]`);
                        row.remove();
                        alert('User deleted successfully');
                    } else {
                        alert(data.message || 'Failed to delete user');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the user');
                }
            }
        }

        // Initialize Lucide icons
        lucide.createIcons();

        document.addEventListener('DOMContentLoaded', function () {
            const menuToggle = document.querySelector('.menu-toggle');
            const navContent = document.querySelector('.nav-content');
            const fileInput = document.getElementById('file-ip-1');
            const preview = document.getElementById('file-ip-1-preview');


            // Add active class to current page in navbar
            const navLinks = document.querySelectorAll('.nav-link');
            navLinks.forEach(link => {
                if (link.getAttribute('href') === window.location.pathname) {
                    link.classList.add('active');
                }
            });

            // Logout functionality (for demonstration purposes)
            const logoutBtn = document.querySelector('.logout-btn');
            logoutBtn.addEventListener('click', (e) => {
                e.preventDefault();
                handleLogout();
            });

            function handleLogout() {
                fetch('/logout', {
                    method: 'POST',
                    credentials: 'same-origin'
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.href = '/EQZone';
                        }
                    })
                    .catch(error => console.error('Logout error:', error));
            }

            // Mobile menu toggle
            menuToggle.addEventListener('click', function () {
                navContent.classList.toggle('show');
                this.classList.toggle('active');

                // Animate hamburger to X
                const spans = this.querySelectorAll('span');
                spans[0].classList.toggle('rotate-45');
                spans[1].classList.toggle('opacity-0');
                spans[2].classList.toggle('-rotate-45');
            });

            // Close mobile menu when clicking outside
            document.addEventListener('click', function (e) {
                const isClickInsideNav = navContent.contains(e.target) || menuToggle.contains(e.target);
                if (!isClickInsideNav && navContent.classList.contains('show')) {
                    navContent.classList.remove('show');
                    menuToggle.classList.remove('active');

                    // Reset hamburger animation
                    const spans = menuToggle.querySelectorAll('span');
                    spans[0].classList.remove('rotate-45');
                    spans[1].classList.remove('opacity-0');
                    spans[2].classList.remove('-rotate-45');
                }
            });

            // Close mobile menu when window is resized to desktop size
            window.addEventListener('resize', function () {
                if (window.innerWidth > 768 && navContent.classList.contains('show')) {
                    navContent.classList.remove('show');
                    menuToggle.classList.remove('active');

                    // Reset hamburger animation
                    const spans = menuToggle.querySelectorAll('span');
                    spans[0].classList.remove('rotate-45');
                    spans[1].classList.remove('opacity-0');
                    spans[2].classList.remove('-rotate-45');
                }
            });
        });
    </script>
</body>

</html>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard - EQZone</title>
    <link rel="stylesheet" href="/adminUpload.css" />
    <script src="https://unpkg.com/lucide@latest"></script>
</head>

<body>
    <div class="container">
        <nav class="vertical-navbar">
            <div class="nav-header">
                <h2 class="nav-title">EQZone</h2>
                <button class="menu-toggle" aria-label="Toggle menu">
                    <span></span>
                    <span></span>
                    <span></span>
                </button>
            </div>
            <div class="nav-content">
                <ul class="nav-links">
                    <li>
                        <a href="/EQZone" class="nav-link"><svg xmlns="http://www.w3.org/2000/svg" width="20"
                                height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-home mr-2">
                                <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                                <polyline points="9 22 9 12 15 12 15 22"></polyline>
                            </svg>Home</a>
                    </li>
                    <li>
                        <a href="/Admin/dashboard" class="nav-link"><svg xmlns="http://www.w3.org/2000/svg" width="20"
                                height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user mr-2">
                                <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2"></path>
                                <circle cx="12" cy="7" r="4"></circle>
                            </svg>All Users</a>
                    </li>
                    <li>
                        <a href="/Admin/AllPresets" class="nav-link"><svg xmlns="http://www.w3.org/2000/svg" width="20"
                                height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-file-text mr-2">
                                <path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"></path>
                                <path d="M14 2v4a2 2 0 0 0 2 2h4"></path>
                                <path d="M10 9H8"></path>
                                <path d="M16 13H8"></path>
                                <path d="M16 17H8"></path>
                            </svg>All Presets</a>
                    </li>
                    <li>
                        <a href="/Admin/uploadFile" class="nav-link"><svg xmlns="http://www.w3.org/2000/svg" width="20"
                                height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-upload mr-2">
                                <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                                <polyline points="17 8 12 3 7 8"></polyline>
                                <line x1="12" x2="12" y1="3" y2="15"></line>
                            </svg>Upload File</a>
                    </li>
                    <li>
                        <button class="nav-link logout-btn">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"
                                fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round" class="lucide lucide-log-out mr-2">
                                <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                                <polyline points="16 17 21 12 16 7"></polyline>
                                <line x1="21" x2="9" y1="12" y2="12"></line>
                            </svg>Logout
                        </button>
                    </li>
                </ul>
            </div>
        </nav>
        <main class="main-content">
            <div class="manage-profile">
                <h1 class="manage-profile-title">Upload File</h1>
                <form id="uploadFileForm" class="manage-profile-form">
                    <div class="manage-profile-txt-field">
                        <label for="fileTitle" class="manage-profile-label">Title</label>
                        <input type="text" id="fileTitle" name="fileTitle" required />
                    </div>
                    <div class="manage-profile-txt-field">
                        <label for="fileDescription" class="manage-profile-label">Description</label>
                        <textarea id="fileDescription" name="fileDescription" rows="4" required></textarea>
                    </div>
                    <div class="manage-profile-txt-field">
                        <label for="iemBrand" class="manage-profile-label">IEM Brand</label>
                        <select id="iemBrand" name="iemBrand" required>
                            <option value="">Select Brand</option>
                        </select>
                    </div>
                    <div class="manage-profile-txt-field">
                        <label for="iemModel" class="manage-profile-label">IEM Model</label>
                        <select id="iemModel" name="iemModel" required>
                            <option value="">Select Model</option>
                        </select>
                    </div>
                    <div class="manage-profile-txt-field">
                        <label for="txtFile" class="manage-profile-label">Upload TXT File</label>
                        <input type="file" id="txtFile" name="txtFile" accept=".txt" required class="file-input" />
                    </div>
                    <button type="submit" class="btn">Upload File</button>
                </form>
            </div>
        </main>
    </div>

    <script>
        // Initialize Lucide icons
        lucide.createIcons();

        document.addEventListener('DOMContentLoaded', function () {
            const uploadFileForm = document.getElementById('uploadFileForm');
            const menuToggle = document.querySelector('.menu-toggle');
            const navContent = document.querySelector('.nav-content');
            const iemBrandSelect = document.getElementById('iemBrand');
            const iemModelSelect = document.getElementById('iemModel');

            // Sample data for IEM brands and models
            const iemData = {
                'Moondrop': ['Aria', 'Starfield', 'Blessing 2', 'S8', 'Kanas Pro', 'Variations', 'Kato', 'Chu', 'Sparks'],
                'Campfire Audio': ['Andromeda', 'Solaris', 'Ara', 'Dorado', 'Vega', 'Honeydew', 'Vega 2020', 'Satsuma', 'Polaris'],
                '64 Audio': ['U12t', 'Nio', 'Duo', 'A12t', 'Tia Fourte', 'Fourte', 'A18t', 'U18t', 'Trio'],
                'Etymotic': ['ER4XR', 'ER2SE', 'ER3SE', 'EVO', 'ER4SR', 'ER4PT', 'ER4B', 'ER2XR', 'ER3XR'],
                'Shure': ['SE846', 'SE535', 'SE215', 'SE425', 'SE533', 'SE845', 'Aonic 4', 'Aonic 3', 'Aonic 215'],
                'Sennheiser': ['IE 600', 'IE 400 Pro', 'IE 300', 'Momentum True Wireless 3', 'CX Plus True Wireless', 'CX 400BT True Wireless'],
                'Focal': ['Celestee', 'Elegia', 'Clear Mg', 'Radiance', 'Astral', 'Listen Professional'],
                'FiiO': ['FH3', 'FH5', 'FH7', 'FD5', 'FD7', 'UTWS5', 'FH1S', 'FH1', 'FH5 Pro', 'FH7 Pro', 'FD5 Pro', 'FD7 Pro', 'UTWS5 Pro', 'JD1'],
                'RHA': ['TrueConnect 2', 'TrueControl ANC', 'TrueControl', 'TrueConnect', 'MA650 Wireless', 'MA450 Wireless'],
                'KZ': ['ZSN Pro X', 'ZEX Pro', 'EDX', 'EDX Pro', 'AS16', 'AS10', 'ZSN Pro'],
                'Final Audio': ['E5000', 'E4000', 'E3000', 'Heaven VI', 'Heaven IV', 'Heaven II'],
                'Westone': ['W40', 'W30', 'W20', 'W10', 'UM Pro 10', 'UM Pro 20', 'UM Pro 30'],
                'Noble Audio': ['Kaiser 10', 'Kaiser 10 Universal', 'K10', 'K3', 'K4', 'K5', 'K6', 'K7', 'K8', 'K10 Universal', 'K10 Universal Edition'],
                'Empire Ears': ['Legend X', 'Odin', 'Aether', 'Zeus', 'Zeus R', 'Apollo', 'Ares II', 'Bravado', 'Phantom'],
                'Oriolus': ['Fortitude', 'Fortitude Bass', 'Traillii', 'Isabella', 'Isis', 'Diana', 'Artemis', 'Athena', 'Eros', 'Aphrodite'],
                'Unique Melody': ['MAVERICK', 'MEST MKII', 'MEST', 'M2 Pro', 'M2C', 'M1', 'M6', 'M7', 'M9', 'MACAW', 'PHOENIX', 'MACAW II', 'MEST MKIII'],
                'Kinera': ['Freya', 'Idun', 'Baldr', 'Loki', 'Odin', 'Thor', 'Freya Pro', 'Idun Pro', 'Baldr Pro', 'Loki Pro', 'Odin Pro', 'Thor Pro']
            };

            // Populate IEM brand dropdown
            Object.keys(iemData).forEach(brand => {
                const option = document.createElement('option');
                option.value = brand;
                option.textContent = brand;
                iemBrandSelect.appendChild(option);
            });

            // Update IEM model dropdown when brand is selected
            iemBrandSelect.addEventListener('change', function () {
                iemModelSelect.innerHTML = '<option value="">Select Model</option>';
                if (this.value) {
                    iemData[this.value].forEach(model => {
                        const option = document.createElement('option');
                        option.value = model;
                        option.textContent = model;
                        iemModelSelect.appendChild(option);
                    });
                    iemModelSelect.disabled = false;
                } else {
                    iemModelSelect.disabled = true;
                }
            });

            // File upload form submission
            uploadFileForm.addEventListener('submit', async function (e) {
                e.preventDefault();

                const title = document.getElementById('fileTitle').value;
                const description = document.getElementById('fileDescription').value;
                const iemBrand = document.getElementById('iemBrand').value;
                const iemModel = document.getElementById('iemModel').value;
                const txtFile = document.getElementById('txtFile').files[0];

                try {
                    const formData = new FormData();
                    formData.append('fileTitle', title);
                    formData.append('fileDescription', description);
                    formData.append('iemBrand', iemBrand);
                    formData.append('iemModel', iemModel);
                    formData.append('txtFile', txtFile);

                    const response = await fetch('/Admin/uploadFile', {
                        method: 'POST',
                        body: formData
                    });

                    const data = await response.json();

                    if (response.ok) {
                        alert('File uploaded successfully!');
                        uploadFileForm.reset();
                        iemModelSelect.innerHTML = '<option value="">Select Model</option>';
                        iemModelSelect.disabled = true;
                    } else {
                        alert(data.message || 'Failed to upload file');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while uploading the file');
                }
            });

            // Add active class to current page in navbar
            const navLinks = document.querySelectorAll('.nav-link');
            navLinks.forEach(link => {
                if (link.getAttribute('href') === window.location.pathname) {
                    link.classList.add('active');
                }
            });

            // Logout functionality (for demonstration purposes)
            const logoutBtn = document.querySelector('.logout-btn');
            logoutBtn.addEventListener('click', (e) => {
                e.preventDefault();
                handleLogout();
            });

            function handleLogout() {
                fetch('/logout', {
                    method: 'POST',
                    credentials: 'same-origin'
                })
                    .then(response => {
                        if (response.ok) {
                            window.location.href = '/EQZone';
                        }
                    })
                    .catch(error => console.error('Logout error:', error));
            }

            // Mobile menu toggle
            menuToggle.addEventListener('click', function () {
                navContent.classList.toggle('show');
                this.classList.toggle('active');

                // Animate hamburger to X
                const spans = this.querySelectorAll('span');
                spans[0].classList.toggle('rotate-45');
                spans[1].classList.toggle('opacity-0');
                spans[2].classList.toggle('-rotate-45');
            });

            // Close mobile menu when clicking outside
            document.addEventListener('click', function (e) {
                const isClickInsideNav = navContent.contains(e.target) || menuToggle.contains(e.target);
                if (!isClickInsideNav && navContent.classList.contains('show')) {
                    navContent.classList.remove('show');
                    menuToggle.classList.remove('active');

                    // Reset hamburger animation
                    const spans = menuToggle.querySelectorAll('span');
                    spans[0].classList.remove('rotate-45');
                    spans[1].classList.remove('opacity-0');
                    spans[2].classList.remove('-rotate-45');
                }
            });

            // Close mobile menu when window is resized to desktop size
            window.addEventListener('resize', function () {
                if (window.innerWidth > 768 && navContent.classList.contains('show')) {
                    navContent.classList.remove('show');
                    menuToggle.classList.remove('active');

                    // Reset hamburger animation
                    const spans = menuToggle.querySelectorAll('span');
                    spans[0].classList.remove('rotate-45');
                    spans[1].classList.remove('opacity-0');
                    spans[2].classList.remove('-rotate-45');
                }
            });
        });
    </script>
</body>

</html>